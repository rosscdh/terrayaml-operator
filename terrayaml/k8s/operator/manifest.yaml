apiVersion: apps/v1
kind: Deployment
metadata:
  name: terrayaml-operator
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      application: terrayaml-operator
  template:
    metadata:
      labels:
        application: terrayaml-operator
    spec:
      serviceAccountName: terrayaml-account
      containers:
      - name: terrayaml-operator
        image: rosscdh/terrayaml-operator
        envFrom:
        - secretRef:
            name: terrayaml-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: "kube-system"
  name: terrayaml-account
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: terrayaml-role-cluster
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [thicc.tech]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, get]

  # Application: read-only access for watching cluster-wide.
  - apiGroups: [thicc.tech]
    resources: [terrayaml]
    verbs: [list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  namespace: "kube-system"
  name: terrayaml-role-namespaced
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [thicc.tech]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [events.k8s.io]
    resources: [events]
    verbs: [create]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [thicc.tech]
    resources: [terrayaml]
    verbs: [list, watch, patch]

  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: terrayaml-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: terrayaml-role-cluster
subjects:
  - kind: ServiceAccount
    name: terrayaml-account
    namespace: "kube-system"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  namespace: "kube-system"
  name: terrayaml-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: terrayaml-role-namespaced
subjects:
  - kind: ServiceAccount
    name: terrayaml-account